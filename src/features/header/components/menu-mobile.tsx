import * as DrawerPrimitive from '@radix-ui/react-dialog';import React from 'react';import iconMenu from '@/assets/icon-menu.svg';import {    Drawer,    DrawerContent,    DrawerDescription,    DrawerOverlay,    DrawerTitle,    DrawerTrigger,} from '@/components/drawer';import { PageRefs, useNavigationContext } from '@/context';import { HEADER_LINKS } from '@/features/header/config/header-config';import { cn } from '@/utils/cn';export const MenuMobile = () => {    const [drawerIsOpen, setDrawerIsOpen] = React.useState(false);    const { navigateTo } = useNavigationContext();    const navTo = (linkId: string) => {        setDrawerIsOpen(false);        setTimeout(() => navigateTo(linkId as keyof PageRefs), 200);    };    return (        <div className={`flex lg:hidden`}>            <div className="flex flex-col">                <Drawer open={drawerIsOpen}>                    <DrawerTitle />                    <DrawerTrigger                        asChild                        onClick={() => setDrawerIsOpen(true)}                    >                        <button className="pt-3 lg:hidden">                            <img                                src={iconMenu}                                alt="menu-icon"                                className={'bg-transparent'}                            />                        </button>                    </DrawerTrigger>                    <DrawerOverlay onClick={() => setDrawerIsOpen(false)} />                    <DrawerContent                        side="right"                        className="bg-primary-indigo pt-10 text-white sm:max-w-60"                    >                        <DrawerDescription />                        <nav className="grid gap-6 text-lg font-medium">                            <div className="flex w-[190px] items-start"></div>                            <ul                                className={`flex flex-col items-end gap-4 pt-8`}                            >                                {HEADER_LINKS.map((link) => {                                    return (                                        <li key={link.id}>                                            {link.isButton ? (                                                <button                                                    onClick={() =>                                                        navTo(link.id)                                                    }                                                >                                                    <span                                                        className={cn(                                                            `inline-block bg-nav-gradient bg-nav-size bg-left-bottom bg-no-repeat pb-[2px] font-subHeadline text-xl font-light text-white [transition:background-size_0.5s,_background-position_0s_0.5s] hover:bg-nav-size-hover hover:bg-right-bottom md:font-normal hover:cursor-pointer`,                                                        )}                                                    >                                                        {link.label}                                                    </span>                                                </button>                                            ) : (                                                <button                                                    onClick={() =>                                                        navTo(link.id)                                                    }                                                >                                                    <span                                                        className={cn(                                                            `inline-block bg-nav-gradient bg-nav-size bg-left-bottom bg-no-repeat pb-[2px] font-subHeadline text-xl font-light text-white [transition:background-size_0.5s,_background-position_0s_0.5s] hover:bg-nav-size-hover hover:bg-right-bottom md:font-normal hover:cursor-pointer`,                                                        )}                                                    >                                                        {link.label}                                                    </span>                                                </button>                                            )}                                        </li>                                    );                                })}                            </ul>                        </nav>                        <DrawerPrimitive.Close                            className="absolute right-4 top-0 rounded-sm pt-10 opacity-70 ring-offset-background-primary transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary-darkRed"                            onClick={() => setDrawerIsOpen(false)}                        >                            <img                                src={                                    'https://140-william-assets.s3.ap-southeast-2.amazonaws.com/icons/close.svg'                                }                                alt={`close-icon`}                                className="size-8"                            />                            <span className="sr-only">Close</span>                        </DrawerPrimitive.Close>                    </DrawerContent>                </Drawer>            </div>        </div>    );};